import { EventEmitter, SimpleChanges, OnChanges, TemplateRef } from '@angular/core';
import { TreeviewI18n } from '../../classes/treeview-i18n';
import { TreeviewItem, TreeviewSelection } from '../../classes/treeview-item';
import { TreeviewConfig } from '../../classes/treeview-config';
import { TreeviewEventParser } from '../../classes/treeview-event-parser';
import { TreeviewHeaderTemplateContext } from '../../interfaces/treeview-header-template-context';
import { TreeviewItemTemplateContext } from '../../interfaces/treeview-item-template-context';
export declare class TreeviewComponent implements OnChanges {
    i18n: TreeviewI18n;
    private defaultConfig;
    private eventParser;
    headerTemplate: TemplateRef<TreeviewHeaderTemplateContext>;
    itemTemplate: TemplateRef<TreeviewItemTemplateContext>;
    items: TreeviewItem[];
    config: TreeviewConfig;
    selectedChange: EventEmitter<any[]>;
    filterChange: EventEmitter<string>;
    addNewItem: EventEmitter<any>;
    editItemName: EventEmitter<TreeviewItem>;
    selectItem: EventEmitter<TreeviewItem>;
    deletedItem: EventEmitter<TreeviewItem>;
    headerTemplateContext: TreeviewHeaderTemplateContext;
    allItem: TreeviewItem;
    filterText: string;
    filterItems: TreeviewItem[];
    selection: TreeviewSelection;
    constructor(i18n: TreeviewI18n, defaultConfig: TreeviewConfig, eventParser: TreeviewEventParser);
    readonly hasFilterItems: boolean;
    readonly maxHeight: string;
    readonly maxWidth: string;
    ngOnChanges(changes: SimpleChanges): void;
    onAllCollapseExpand(): void;
    onFilterTextChange(text: string): void;
    onAllCheckedChange(): void;
    onItemCheckedChange(item: TreeviewItem, checked: boolean): void;
    raiseSelectedChange(): void;
    onSelectItem(item: TreeviewItem): void;
    endEdit(item: TreeviewItem): void;
    onEndEdit(item: TreeviewItem): void;
    onEndAddItem(item: TreeviewItem): void;
    enterNameItem(e: KeyboardEvent, item: TreeviewItem): void;
    cancelEdit(item: TreeviewItem): void;
    onCancelEdit(item: TreeviewItem): void;
    onAddNewItem(item: TreeviewItem): void;
    deleteItem(item: TreeviewItem): void;
    editItem(item: TreeviewItem): void;
    private createHeaderTemplateContext();
    private generateSelection();
    private updateFilterItems();
    private filterItem(item, filterText);
    private updateCheckedOfAll();
    private updateCollapsedOfAll();
}
