[{"__symbolic":"module","version":4,"metadata":{"TreeviewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":46,"character":1},"arguments":[{"selector":"ngx-treeview","template":"\n    <ng-template #defaultItemTemplate let-item=\"item\" let-onCollapseExpand=\"onCollapseExpand\" let-onCheckedChange=\"onCheckedChange\">\n      <div class=\"form-inline row-item\">\n        <i *ngIf=\"item.children\" (click)=\"onCollapseExpand()\" aria-hidden=\"true\" class=\"fa\" [class.fa-caret-right]=\"item.collapsed\"\n          [class.fa-caret-down]=\"!item.collapsed\"></i>\n        <div class=\"form-check\">\n          <input *ngIf=\"config.hasCheckbox\" type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange()\" [disabled]=\"item.disabled\"\n            [indeterminate]=\"item.indeterminate\" />\n          <label *ngIf=\"config.hasCheckbox\" class=\"form-check-label\" (click)=\"item.checked = !item.checked; onCheckedChange()\">\n            {{item.text}}\n          </label>\n          <div class=\"input-container\">\n            <input *ngIf=\"item.edit\" type=\"text\" class=\"form-control\"\n              (keyup)=\"enterNameItem($event, item)\"\n              [(ngModel)]=\"item.editText\">\n            <i *ngIf=\"item.edit\" (click)=\"endEdit(item)\" class=\"fa fa-check\"></i>\n            <i *ngIf=\"item.edit\" (click)=\"cancelEdit(item)\" class=\"fa fa-times\"></i>\n          </div>\n          <span class=\"item-name\" *ngIf=\"!config.hasCheckbox && !item.edit\" (click)=\"onSelectItem(item)\"  [ngClass]=\"{'treeview-item-selected': item.selected, 'treeview-item-active': item.active}\">\n            {{item.text}}\n          </span>\n          <i *ngIf=\"config.hasAdd && !item.edit\" (click)=\"onAddNewItem(item)\" class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"config.hasEdit && !item.edit\" (click)=\"editItem(item)\" class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"config.hasDelete && !item.edit\" (click)=\"deleteItem(item)\" class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </ng-template>\n\n    <ng-template #defaultHeaderTemplate let-config=\"config\" let-item=\"item\" let-onCollapseExpand=\"onCollapseExpand\" let-onCheckedChange=\"onCheckedChange\"\n      let-onFilterTextChange=\"onFilterTextChange\">\n      <div *ngIf=\"config.hasFilter\" class=\"row row-filter\">\n        <div class=\"col-12\">\n          <input class=\"form-control\" type=\"text\" [placeholder]=\"i18n.getFilterPlaceholder()\" [(ngModel)]=\"filterText\" (ngModelChange)=\"onFilterTextChange($event)\"\n          />\n        </div>\n      </div>\n      <div *ngIf=\"hasFilterItems\">\n        <div *ngIf=\"config.hasAllCheckBox || config.hasCollapseExpand\" class=\"row row-all\">\n          <div class=\"col-12\">\n            <div class=\"form-check\">\n              <input *ngIf=\"config.hasCheckbox\" type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange()\" [indeterminate]=\"item.indeterminate\"\n              />\n              <label *ngIf=\"config.hasAllCheckBox && config.hasCheckbox\" class=\"form-check-label\" (click)=\"item.checked = !item.checked; onCheckedChange()\">\n                {{i18n.getAllCheckboxText()}}\n              </label>\n              <span *ngIf=\"!config.hasCheckbox && !item.edit\">{{i18n.getAllCheckboxText()}}</span>\n              <label *ngIf=\"config.hasCollapseExpand\" class=\"pull-right form-check-label\" (click)=\"onCollapseExpand()\">\n                <i [title]=\"i18n.getTooltipCollapseExpandText(item.collapsed)\" aria-hidden=\"true\" class=\"fa\" [class.fa-expand]=\"item.collapsed\"\n                  [class.fa-compress]=\"!item.collapsed\"></i>\n              </label>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"config.hasDivider\" class=\"dropdown-divider\"></div>\n      </div>\n    </ng-template>\n\n    <div class=\"treeview-header\">\n      <ng-template [ngTemplateOutlet]=\"headerTemplate || defaultHeaderTemplate\" [ngTemplateOutletContext]=\"headerTemplateContext\">\n      </ng-template>\n    </div>\n    <div [ngSwitch]=\"hasFilterItems\">\n      <div *ngSwitchCase=\"true\" class=\"treeview-container\" [style.max-height.px]=\"maxHeight\" [style.max-width.px]=\"maxWidth\">\n        <ngx-treeview-item *ngFor=\"let item of filterItems\" [config]=\"config\" [item]=\"item\" [template]=\"itemTemplate || defaultItemTemplate\"\n          (checkedChange)=\"onItemCheckedChange(item, $event)\">\n        </ngx-treeview-item>\n      </div>\n      <div *ngSwitchCase=\"false\" class=\"treeview-text\">\n        {{i18n.getFilterNoItemsFoundText()}}\n      </div>\n    </div>\n  ","styles":["\n    :host /deep/ .treeview-header .row-filter {\n      margin-bottom: .5rem;\n    }\n\n    :host /deep/ .treeview-header .row-all .fa {\n      cursor: pointer;\n    }\n\n    :host /deep/ .treeview-container .row-item {\n      margin-bottom: .3rem;\n      flex-wrap: nowrap;\n    }\n\n    :host /deep/ .treeview-container .row-item .input-container {\n      position: relative;\n    }\n\n    :host /deep/ .treeview-container .row-item .input-container .fa-check {\n      position: absolute;\n      right: 30px;\n      top: 10px;\n    }\n\n    :host /deep/ .treeview-container .row-item .input-container .fa-times {\n      position: absolute;\n      top: 10px;\n      right: 5px;\n    }\n\n    :host /deep/ .treeview-container .row-item .fa {\n      width: .8rem;\n      cursor: pointer;\n      margin-right: .3rem;\n    }\n\n    :host /deep/ .treeview-container .row-item .item-name {\n      cursor: pointer;\n    }\n\n    :host /deep/ .treeview-container .row-item .item-name.treeview-item-selected {\n      font-weight: bold;\n    }\n\n    :host /deep/ .treeview-container .row-item .item-name.treeview-item-active {\n      background-color: #007bff;\n    }\n\n    :host /deep/ .treeview-container .row-item .fa-plus {\n      margin-left: .3rem;\n    }\n\n    .treeview-container {\n      overflow-y: auto;\n      padding-right: .3rem;\n    }\n\n    .treeview-text {\n      padding: .3rem 0;\n      white-space: nowrap;\n    }\n  "]}]}],"members":{"headerTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":184,"character":3}}]}],"itemTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":185,"character":3}}]}],"items":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":186,"character":3}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":187,"character":3}}]}],"selectedChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":188,"character":3}}]}],"filterChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":189,"character":3}}]}],"addNewItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":190,"character":3}}]}],"editItemName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":191,"character":3}}]}],"selectItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":192,"character":3}}]}],"deletedItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":193,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../classes/treeview-i18n","name":"TreeviewI18n","line":203,"character":17},{"__symbolic":"reference","module":"../../classes/treeview-config","name":"TreeviewConfig","line":204,"character":27},{"__symbolic":"reference","module":"../../classes/treeview-event-parser","name":"TreeviewEventParser","line":205,"character":25}]}],"ngOnChanges":[{"__symbolic":"method"}],"onAllCollapseExpand":[{"__symbolic":"method"}],"onFilterTextChange":[{"__symbolic":"method"}],"onAllCheckedChange":[{"__symbolic":"method"}],"onItemCheckedChange":[{"__symbolic":"method"}],"raiseSelectedChange":[{"__symbolic":"method"}],"onSelectItem":[{"__symbolic":"method"}],"endEdit":[{"__symbolic":"method"}],"onEndEdit":[{"__symbolic":"method"}],"onEndAddItem":[{"__symbolic":"method"}],"enterNameItem":[{"__symbolic":"method"}],"cancelEdit":[{"__symbolic":"method"}],"onCancelEdit":[{"__symbolic":"method"}],"onAddNewItem":[{"__symbolic":"method"}],"deleteItem":[{"__symbolic":"method"}],"editItem":[{"__symbolic":"method"}],"onKeyUp":[{"__symbolic":"method"}],"onKeyDn":[{"__symbolic":"method"}],"onKeySelect":[{"__symbolic":"method"}],"onKeyLeft":[{"__symbolic":"method"}],"onKeyRight":[{"__symbolic":"method"}],"fixActive":[{"__symbolic":"method"}],"createHeaderTemplateContext":[{"__symbolic":"method"}],"generateSelection":[{"__symbolic":"method"}],"updateFilterItems":[{"__symbolic":"method"}],"filterItem":[{"__symbolic":"method"}],"updateCheckedOfAll":[{"__symbolic":"method"}],"updateCollapsedOfAll":[{"__symbolic":"method"}]}}}}]